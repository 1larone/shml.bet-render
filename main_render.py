#!/usr/bin/env python3
"""
CS2 Betting Bot - –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è Render.com
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è –¥–ª—è —Ä–∞–±–æ—Ç—ã –Ω–∞ Render —Ö–æ—Å—Ç–∏–Ω–≥–µ
"""

import os
import asyncio
import threading
import time
from flask import Flask
from bot import main as bot_main
from web_server import create_app

def get_render_config():
    """–ü–æ–ª—É—á–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è Render"""
    port = int(os.getenv('PORT', 5000))
    
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º URL –¥–ª—è Render
    service_name = os.getenv('RENDER_SERVICE_NAME', 'cs2-betting-bot')
    host_url = os.getenv('HOST_URL', f"{service_name}.onrender.com")
    
    return {
        'port': port,
        'host_url': host_url,
        'host': '0.0.0.0'  # Render —Ç—Ä–µ–±—É–µ—Ç 0.0.0.0
    }

def run_telegram_bot():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç Telegram –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
    try:
        loop = asyncio.new_event_loop()
        asyncio.set_event_loop(loop)
        loop.run_until_complete(bot_main())
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –±–æ—Ç–∞: {e}")

def create_render_app():
    """–°–æ–∑–¥–∞–µ—Ç Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è Render"""
    app = create_app()
    
    @app.route('/health')
    def health_check():
        return {'status': 'healthy', 'service': 'cs2-betting-bot'}, 200
    
    @app.route('/')
    def render_info():
        return {
            'service': 'CS2 Betting Bot',
            'status': 'running',
            'platform': 'Render',
            'endpoints': {
                'health': '/health',
                'webapp': '/static/index.html',
                'api': '/api/*'
            }
        }
    
    return app

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è Render"""
    print("üöÄ –ó–∞–ø—É—Å–∫ CS2 Betting Bot –Ω–∞ Render.com")
    
    config = get_render_config()
    print(f"üåê –ü–æ—Ä—Ç: {config['port']}")
    print(f"üîó URL: https://{config['host_url']}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
    if not os.getenv('TELEGRAM_BOT_TOKEN'):
        print("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        print("–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Render:")
        print("TELEGRAM_BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω_–±–æ—Ç–∞")
        return
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º HOST_URL –¥–ª—è –∞–Ω—Ç–∏—Å–æ–Ω —Å–∏—Å—Ç–µ–º—ã
    os.environ['HOST_URL'] = config['host_url']
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Telegram –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    print("ü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
    bot_thread = threading.Thread(target=run_telegram_bot, daemon=True)
    bot_thread.start()
    
    # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞
    time.sleep(3)
    
    # –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    print("üåê –ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞...")
    app = create_render_app()
    
    try:
        app.run(
            host=config['host'],
            port=config['port'],
            debug=False,
            threaded=True
        )
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞: {e}")

if __name__ == "__main__":
    main()